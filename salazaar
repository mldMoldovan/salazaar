#!/bin/bash

_name="S.A.L.A.Z.A.A.R."
_desc="Network Wizard"
_status="Very Good"
_version="0.1.7"



RED='\e[1;91m'
GREEN='\e[1;92m'
BLUE='\e[1;96m'
YELLOW='\e[1;93m'
NC='\033[0m'
WHITE='\e[1;97m'


# COLOR FUNCTIONS


_green(){

GREEN='\e[1;92m'
printf "$GREEN\n"

}

_white(){

WHITE='\e[1;97m'
printf "$WHITE\n"

}

_yellow(){

YELLOW='\e[1;93m'
printf "$YELLOW\n"

}

_red(){

RED='\e[1;91m'
printf "$RED\n"

}


_cyan(){

CYAN='\e[1;96m'
printf "$CYAN\n"

}

_normal(){

NC='\033[0m'
printf "$NC\n"

}

_quietTextRestore(){

NC='\033[0m'
printf "$NC\n"

}





# MORPHING

_samsung(){


  _rnd=$[RANDOM%14]
  _codes=("D0:87:E2" "20:55:31" "54:40:AD" "84:2E:27" "50:F0:D3" "84:11:9E" "08:EC:A9" "10:D3:8A" "38:2D:D1" "E0:CB:EE" "64:B8:53" "F4:42:8F" "18:83:31" "84:55:A5" "A8:7C:01" "C0:11:73")




_system="$(uname -s)"

if [ $_system == "Darwin" ]; then

_off
sudo ifconfig en0 ether $(hexchars="0123456789ABCDEF"
end=$( for i in {1..6} ; do echo -n ${hexchars:$(( $RANDOM % 16 )):1} ; done | sed -e 's/\(..\)/-\1/g' )
echo ${_codes[$_rnd]}$end)
_on

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Samsung :: $(ifconfig en0 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Linux" ]]; then

sudo ip link set dev enp0s3 down
sudo ip link set dev enp0s3 address $(echo ${_codes[$_rnd]}:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
sudo ip link set dev enp0s3 up

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Samsung :: $(ifconfig enp0s3 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Minix" ]]; then

  sudo ip link set dev enp0s3 down
  sudo ip link set dev enp0s3 address $(echo 38:2D:E8:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
  sudo ip link set dev enp0s3 up

elif [[ $_system == "OpenBSD" ]]; then

  ifconfig em0 lladdr $(echo ${_codes[$_rnd]}:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])

else

 printf "Not available on this system\n"

fi





}

_lg(){


  _rnd=$[RANDOM%9]
  _codes=("14:C9:13" "3C:BD:D8" "2C:54:CF" "00:1F:E3" "00:26:E2" "00:1E:75" "6C:D6:8A" "20:21:A5" "0C:48:85")

  _system="$(uname -s)"

  if [ $_system == "Darwin" ]; then

  _off
  sudo ifconfig en0 ether $(hexchars="0123456789ABCDEF"
  end=$( for i in {1..6} ; do echo -n ${hexchars:$(( $RANDOM % 16 )):1} ; done | sed -e 's/\(..\)/-\1/g' )
  echo ${_codes[$_rnd]}$end)
  _on

  if [ "$1" == "-q" ]; then
  >/dev/null  2>&1
  else
  printf "$WHITE LG :: $(ifconfig en0 | grep ether | awk '{print $2}')$NC\n"
  fi

  elif [[ $_system == "Linux" ]]; then

  sudo ip link set dev enp0s3 down
  sudo ip link set dev enp0s3 address $(echo ${_codes[$_rnd]}:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
  sudo ip link set dev enp0s3 up

  if [ "$1" == "-q" ]; then
  >/dev/null  2>&1
  else
  printf "$WHITE LG :: $(ifconfig enp0s3 | grep ether | awk '{print $2}')$NC\n"
  fi

  elif [[ $_system == "Minix" ]]; then

    sudo ip link set dev enp0s3 down
    sudo ip link set dev enp0s3 address $(echo 2C:54:CF:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
    sudo ip link set dev enp0s3 up

  elif [[ $_system == "OpenBSD" ]]; then

    ifconfig em0 lladdr $(echo ${_codes[$_rnd]}:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])

  else

   printf "Not available on this system\n"

  fi



}

_apple(){


  _rnd=$[RANDOM%19]
  _codes=("F0:76:6F" "40:CB:C0" "40:98:AD" "6C:4D:73" "C4:84:66" "B8:63:4D" "50:32:37" "D4:61:9D" "B0:48:1A" "98:9E:63" "DC:A9:04" "48:A1:95" "6C:AB:31" "7C:50:49" "E4:2B:34" "1C:36:BB" "3C:2E:FF" "6C:96:CF" "30:35:AD" "A8:BE:27" "70:A2:B3")


  _system="$(uname -s)"

  if [ $_system == "Darwin" ]; then

  #printf "$YELLOW DEBUG ->$BLUE Darwin morphing$NC\n"

  _off
  sudo ifconfig en0 ether $(hexchars="0123456789ABCDEF"
  end=$( for i in {1..6} ; do echo -n ${hexchars:$(( $RANDOM % 16 )):1} ; done | sed -e 's/\(..\)/-\1/g' )
  echo ${_codes[$_rnd]}$end)
  _on

  if [ "$1" == "-q" ]; then
  >/dev/null  2>&1
  else
  printf "$WHITE Apple :: $(ifconfig en0 | grep ether | awk '{print $2}')$NC\n"
  fi

  elif [[ $_system == "Linux" ]]; then

  #printf "$YELLOW DEBUG ->$BLUE Linux morphing$NC\n"




  sudo ip link set dev enp0s3 down
  sudo ip link set dev enp0s3 address $(echo ${_codes[$_rnd]}:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
  sudo ip link set dev enp0s3 up

  #printf "$YELLOW DEBUG ->$BLUE Should be done$NC\n"
  #printf "$YELLOW I have generated another :$WHITE $(hexchars="0123456789ABCDEF" end=$( for i in {1..6} ; do echo -n ${hexchars:$(( $RANDOM % 16 )):1} ; done | sed -e 's/\(..\)/-\1/g' ) echo DC:A9:04$end)$NC\n"

  if [ "$1" == "-q" ]; then
  >/dev/null  2>&1
  else
  printf "$WHITE Apple :: $(ifconfig enp0s3 | grep ether | awk '{print $2}')$NC\n"
  fi

  elif [[ $_system == "Minix" ]]; then

    sudo ip link set dev enp0s3 down
    sudo ip link set dev enp0s3 address $(echo DC:A9:04:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
    sudo ip link set dev enp0s3 up

  elif [[ $_system == "OpenBSD" ]]; then

    ifconfig em0 lladdr $(echo ${_codes[$_rnd]}:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])

  else

   printf "$RED Not available on this system$NC\n"

  fi



}

_oppo(){


  _rnd=$[RANDOM%19]
  _codes=("E8:BB:A8" "BC:3A:EA" "8C:0E:E3" "6C:5C:14" "EC:F3:42" "DC:55:83" "88:5A:06" "1C:42:7D" "50:29:F5" "84:6F:CE" "F4:D6:20" "EC:51:BC" "F0:79:E8" "F0:6D:78" "50:3C:EA" "58:7A:6A" "E4:C4:83" "D4:67:D3" "58:C6:F0" "C0:2E:25" "48:83:B4")



_system="$(uname -s)"

if [ $_system == "Darwin" ]; then

#printf "$YELLOW DEBUG ->$BLUE Darwin morphing$NC\n"

_off
sudo ifconfig en0 ether $(hexchars="0123456789ABCDEF"
end=$( for i in {1..6} ; do echo -n ${hexchars:$(( $RANDOM % 16 )):1} ; done | sed -e 's/\(..\)/-\1/g' )
echo ${_codes[$_rnd]}$end)
_on

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Oppo :: $(ifconfig en0 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Linux" ]]; then

#printf "$YELLOW DEBUG ->$BLUE Linux morphing$NC\n"




sudo ip link set dev enp0s3 down
sudo ip link set dev enp0s3 address $(echo ${_codes[$_rnd]}:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
sudo ip link set dev enp0s3 up

#printf "$YELLOW DEBUG ->$BLUE Should be done$NC\n"
#printf "$YELLOW I have generated another :$WHITE $(hexchars="0123456789ABCDEF" end=$( for i in {1..6} ; do echo -n ${hexchars:$(( $RANDOM % 16 )):1} ; done | sed -e 's/\(..\)/-\1/g' ) echo DC:A9:04$end)$NC\n"

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Oppo :: $(ifconfig enp0s3 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Minix" ]]; then

  sudo ip link set dev enp0s3 down
  sudo ip link set dev enp0s3 address $(echo 50:29:F5:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
  sudo ip link set dev enp0s3 up

elif [[ $_system == "OpenBSD" ]]; then

  ifconfig em0 lladdr $(echo ${_codes[$_rnd]}:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])

else

 printf "$RED Not available on this system$NC\n"

fi

}

_one_plus(){


_system="$(uname -s)"

if [ $_system == "Darwin" ]; then

_off
sudo ifconfig en0 ether $(hexchars="0123456789ABCDEF"
end=$( for i in {1..6} ; do echo -n ${hexchars:$(( $RANDOM % 16 )):1} ; done | sed -e 's/\(..\)/-\1/g' )
echo C0:EE:FB$end)
_on

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE One Plus :: $(ifconfig en0 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Linux" ]]; then

sudo ip link set dev enp0s3 down
sudo ip link set dev enp0s3 address $(echo C0:EE:FB:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
sudo ip link set dev enp0s3 up

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE One Plus :: $(ifconfig enp0s3 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Minix" ]]; then

  sudo ip link set dev enp0s3 down
  sudo ip link set dev enp0s3 address $(echo C0:EE:FB:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
  sudo ip link set dev enp0s3 up

elif [[ $_system == "OpenBSD" ]]; then

  ifconfig em0 lladdr $(echo C0:EE:FB:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])

else

 printf "Not available on this system\n"

fi

}

_huawei(){


_rnd=$[RANDOM%19]
_codes=("48:AD:08" "2C:AB:00" "00:E0:FC" "24:DF:6A" "00:9A:CD" "80:38:BC" "D4:40:F0" "64:A6:51" "E8:CD:2D" "AC:E2:15" "EC:23:3D" "78:F5:FD" "80:B6:86" "10:C6:1F" "88:53:D4" "0C:37:DC" "BC:76:70" "24:DB:AC" "0C:45:BA" "CC:A2:23" "E8:08:8B")

_system="$(uname -s)"

if [ $_system == "Darwin" ]; then

_off
sudo ifconfig en0 ether $(hexchars="0123456789ABCDEF"
end=$( for i in {1..6} ; do echo -n ${hexchars:$(( $RANDOM % 16 )):1} ; done | sed -e 's/\(..\)/-\1/g' )
echo ${_codes[$_rnd]}$end)
_on

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Huawei :: $(ifconfig en0 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Linux" ]]; then

sudo ip link set dev enp0s3 down
sudo ip link set dev enp0s3 address $(echo ${_codes[$_rnd]}:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
sudo ip link set dev enp0s3 up

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Huawei :: $(ifconfig enp0s3 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Minix" ]]; then

  sudo ip link set dev enp0s3 down
  sudo ip link set dev enp0s3 address $(echo 78:F5:FD:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
  sudo ip link set dev enp0s3 up

elif [[ $_system == "OpenBSD" ]]; then

  ifconfig em0 lladdr $(echo ${_codes[$_rnd]}:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])

else

 printf "Not available on this system\n"

fi

}

_xperia(){



_system="$(uname -s)"

if [ $_system == "Darwin" ]; then

_off
sudo ifconfig en0 ether $(hexchars="0123456789ABCDEF"
end=$( for i in {1..6} ; do echo -n ${hexchars:$(( $RANDOM % 16 )):1} ; done | sed -e 's/\(..\)/-\1/g' )
echo 1C:7B:21$end)
_on

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Xperia :: $(ifconfig en0 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Linux" ]]; then

sudo ip link set dev enp0s3 down
sudo ip link set dev enp0s3 address $(echo 1C:7B:21:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
sudo ip link set dev enp0s3 up

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Xperia :: $(ifconfig enp0s3 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Minix" ]]; then

  sudo ip link set dev enp0s3 down
  sudo ip link set dev enp0s3 address $(echo 1C:7B:21:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
  sudo ip link set dev enp0s3 up

elif [[ $_system == "OpenBSD" ]]; then

  ifconfig em0 lladdr $(echo 1C:7B:21:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])

else

 printf "Not available on this system\n"

fi

}

_yota(){


_system="$(uname -s)"

if [ $_system == "Darwin" ]; then

_off
sudo ifconfig en0 ether $(hexchars="0123456789ABCDEF"
end=$( for i in {1..6} ; do echo -n ${hexchars:$(( $RANDOM % 16 )):1} ; done | sed -e 's/\(..\)/-\1/g' )
echo 28:C6:71$end)
_on

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Yota :: $(ifconfig en0 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Linux" ]]; then

sudo ip link set dev enp0s3 down
sudo ip link set dev enp0s3 address $(echo 28:C6:71:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
sudo ip link set dev enp0s3 up

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Yota :: $(ifconfig enp0s3 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Minix" ]]; then

  sudo ip link set dev enp0s3 down
  sudo ip link set dev enp0s3 address $(echo 28:C6:71:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
  sudo ip link set dev enp0s3 up

elif [[ $_system == "OpenBSD" ]]; then

  ifconfig em0 lladdr $(echo 28:C6:71:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])

else

 printf "Not available on this system\n"

fi

}


_lumia(){


_system="$(uname -s)"

if [ $_system == "Darwin" ]; then

_off
sudo ifconfig en0 ether $(hexchars="0123456789ABCDEF"
end=$( for i in {1..6} ; do echo -n ${hexchars:$(( $RANDOM % 16 )):1} ; done | sed -e 's/\(..\)/-\1/g' )
echo 38:F2:3E$end)
_on

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Lumia :: $(ifconfig en0 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Linux" ]]; then

sudo ip link set dev enp0s3 down
sudo ip link set dev enp0s3 address $(echo 38:F2:3E:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
sudo ip link set dev enp0s3 up

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Lumia :: $(ifconfig enp0s3 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Minix" ]]; then

  sudo ip link set dev enp0s3 down
  sudo ip link set dev enp0s3 address $(echo 38:F2:3E:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
  sudo ip link set dev enp0s3 up

elif [[ $_system == "OpenBSD" ]]; then

  ifconfig em0 lladdr $(echo 38:F2:3E:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])

else

 printf "Not available on this system\n"

fi

}

_nokia(){

  _rnd=$[RANDOM%13]
  _codes=("A4:81:EE" "4C:7F:62" "40:7A:80" "B0:5C:E5" "D4:C1:FC" "48:DC:FB" "E0:A6:70" "6C:9B:02" "0C:DD:EF" "54:44:08" "C8:D1:0B" "C8:97:9F" "F4:F5:A5" "3C:C2:43")


_system="$(uname -s)"

if [ $_system == "Darwin" ]; then

_off
sudo ifconfig en0 ether $(hexchars="0123456789ABCDEF"
end=$( for i in {1..6} ; do echo -n ${hexchars:$(( $RANDOM % 16 )):1} ; done | sed -e 's/\(..\)/-\1/g' )
echo ${_codes[$_rnd]}$end)
_on

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Nokia :: $(ifconfig en0 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Linux" ]]; then

sudo ip link set dev enp0s3 down
sudo ip link set dev enp0s3 address $(echo ${_codes[$_rnd]}:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
sudo ip link set dev enp0s3 up

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Nokia :: $(ifconfig enp0s3 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Minix" ]]; then

  sudo ip link set dev enp0s3 down
  sudo ip link set dev enp0s3 address $(echo A4:81:EE:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
  sudo ip link set dev enp0s3 up

elif [[ $_system == "OpenBSD" ]]; then

  ifconfig em0 lladdr $(echo ${_codes[$_rnd]}:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])

else

 printf "Not available on this system\n"

fi

}

_htc(){


  _rnd=$[RANDOM%18]
  _codes=("80:7A:BF" "90:E7:C4" "7C:61:93" "2C:8A:72" "98:0D:2E" "A8:26:D9" "D4:20:6D" "18:87:96" "00:23:76" "04:C2:3E" "00:EE:BD" "AC:37:43" "00:09:2D" "F8:DB:7F" "E8:99:C4" "80:01:84" "50:2E:5C" "84:7A:88" "74:F6:1C" "38:E7:D8")



_system="$(uname -s)"

if [ $_system == "Darwin" ]; then

_off
sudo ifconfig en0 ether $(hexchars="0123456789ABCDEF"
end=$( for i in {1..6} ; do echo -n ${hexchars:$(( $RANDOM % 16 )):1} ; done | sed -e 's/\(..\)/-\1/g' )
echo ${_codes[$_rnd]}$end)
_on

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE HTC :: $(ifconfig en0 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Linux" ]]; then

sudo ip link set dev enp0s3 down
sudo ip link set dev enp0s3 address $(echo ${_codes[$_rnd]}:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
sudo ip link set dev enp0s3 up

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE HTC :: $(ifconfig enp0s3 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Minix" ]]; then

  sudo ip link set dev enp0s3 down
  sudo ip link set dev enp0s3 address $(echo 80:7A:BF:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
  sudo ip link set dev enp0s3 up

elif [[ $_system == "OpenBSD" ]]; then

  ifconfig em0 lladdr $(echo ${_codes[$_rnd]}:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])

else

 printf "Not available on this system\n"

fi

}

_xiaomi(){

  _rnd=$[RANDOM%19]
  _codes=("8C:5A:F8" "F8:A4:5F" "8C:BE:BE" "64:09:80" "98:FA:E3" "18:59:36" "9C:99:A0" "C4:0B:CB" "EC:D0:9F" "F4:F5:DB" "E4:46:DA" "18:F0:E4" "9C:2E:A1" "50:A0:09" "20:A6:0C" "E0:DC:FF" "60:AB:67" "90:78:B2" "04:C8:07" "74:23:44" "D8:32:E3")



_system="$(uname -s)"

if [ $_system == "Darwin" ]; then

_off
sudo ifconfig en0 ether $(hexchars="0123456789ABCDEF"
end=$( for i in {1..6} ; do echo -n ${hexchars:$(( $RANDOM % 16 )):1} ; done | sed -e 's/\(..\)/-\1/g' )
echo ${_codes[$_rnd]}$end)
_on

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Xiaomi :: $(ifconfig en0 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Linux" ]]; then

sudo ip link set dev enp0s3 down
sudo ip link set dev enp0s3 address $(echo ${_codes[$_rnd]}:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
sudo ip link set dev enp0s3 up

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Xiaomi :: $(ifconfig enp0s3 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Minix" ]]; then

  sudo ip link set dev enp0s3 down
  sudo ip link set dev enp0s3 address $(echo F8:A4:5F:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
  sudo ip link set dev enp0s3 up

elif [[ $_system == "OpenBSD" ]]; then

  ifconfig em0 lladdr $(echo ${_codes[$_rnd]}:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])

else

 printf "Not available on this system\n"

fi

}


_hp(){


  _rnd=$[RANDOM%19]
  _codes=("3C:D9:2B" "9C:8E:99" "B4:99:BA" "1C:C1:DE" "F4:CE:46" "00:1C:C4" "00:25:B3" "00:18:71" "00:0B:CD" "00:0E:7F" "00:0F:20" "00:11:0A" "00:13:21" "00:16:35" "00:17:A4" "00:08:02" "00:08:83" "C4:34:6B" "8C:DC:D4" "34:64:A9" "D4:C9:EF")


_system="$(uname -s)"

if [ $_system == "Darwin" ]; then

_off
sudo ifconfig en0 ether $(hexchars="0123456789ABCDEF"
end=$( for i in {1..6} ; do echo -n ${hexchars:$(( $RANDOM % 16 )):1} ; done | sed -e 's/\(..\)/-\1/g' )
echo ${_codes[$_rnd]}$end)
_on

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE HP :: $(ifconfig en0 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Linux" ]]; then

sudo ip link set dev enp0s3 down
sudo ip link set dev enp0s3 address $(echo ${_codes[$_rnd]}:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
sudo ip link set dev enp0s3 up

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE HP :: $(ifconfig enp0s3 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Minix" ]]; then

  sudo ip link set dev enp0s3 down
  sudo ip link set dev enp0s3 address $(echo 3C:D9:2B:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
  sudo ip link set dev enp0s3 up

elif [[ $_system == "OpenBSD" ]]; then

  ifconfig em0 lladdr $(echo ${_codes[$_rnd]}:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])

else

 printf "Not available on this system\n"

fi

}



_dell(){


  _rnd=$[RANDOM%19]
  _codes=("EC:F4:BB" "D0:67:E5" "18:A9:9B" "F8:DB:88" "18:FB:7B" "74:E6:E2" "10:98:36" "44:A8:42" "34:E6:D7" "00:0B:DB" "00:11:43" "00:18:8B" "D4:BE:D9" "00:1A:A0" "00:21:70" "00:26:B9" "A4:BA:DB" "00:1E:4F" "5C:F9:DD" "00:06:5B" "80:18:44")



_system="$(uname -s)"

if [ $_system == "Darwin" ]; then

_off
sudo ifconfig en0 ether $(hexchars="0123456789ABCDEF"
end=$( for i in {1..6} ; do echo -n ${hexchars:$(( $RANDOM % 16 )):1} ; done | sed -e 's/\(..\)/-\1/g' )
echo ${_codes[$_rnd]}$end)
_on

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Dell :: $(ifconfig en0 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Linux" ]]; then

sudo ip link set dev enp0s3 down
sudo ip link set dev enp0s3 address $(echo ${_codes[$_rnd]}:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
sudo ip link set dev enp0s3 up

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Dell :: $(ifconfig enp0s3 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Minix" ]]; then

  sudo ip link set dev enp0s3 down
  sudo ip link set dev enp0s3 address $(echo echo F8:DB:88:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
  sudo ip link set dev enp0s3 up

elif [[ $_system == "OpenBSD" ]]; then

  ifconfig em0 lladdr $(echo echo ${_codes[$_rnd]}:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])

else

 printf "Not available on this system\n"

fi

}

_ibm(){


_rnd=$[RANDOM%19]
_codes=("00:04:AC" "00:60:94" "A8:97:DC" "E4:1F:13" "00:25:03" "00:17:EF" "10:00:5A" "98:BE:94" "6C:AE:8B" "5C:F3:FC" "FC:CF:62" "00:21:5E" "00:02:55" "00:50:76" "00:06:29" "00:20:35" "08:00:5A" "40:F2:E9" "00:09:6B" "74:99:75" "34:40:B5")


_system="$(uname -s)"

if [ $_system == "Darwin" ]; then

_off
sudo ifconfig en0 ether $(hexchars="0123456789ABCDEF"
end=$( for i in {1..6} ; do echo -n ${hexchars:$(( $RANDOM % 16 )):1} ; done | sed -e 's/\(..\)/-\1/g' )
echo ${_codes[$_rnd]}$end)
_on

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE IBM :: $(ifconfig en0 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Linux" ]]; then

sudo ip link set dev enp0s3 down
sudo ip link set dev enp0s3 address $(echo ${_codes[$_rnd]}:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
sudo ip link set dev enp0s3 up

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE IBM :: $(ifconfig enp0s3 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Minix" ]]; then

  sudo ip link set dev enp0s3 down
  sudo ip link set dev enp0s3 address $(echo echo 6C:AE:8B:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
  sudo ip link set dev enp0s3 up

elif [[ $_system == "OpenBSD" ]]; then

  ifconfig em0 lladdr $(echo echo ${_codes[$_rnd]}:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])

else

 printf "Not available on this system\n"

fi

}

_microsoft(){


_rnd=$[RANDOM%19]
_codes=("38:F2:3E" "48:50:73" "74:E2:8C" "84:63:D6" "D4:8F:33" "00:15:5D" "00:50:F2" "98:5F:D3" "38:25:6B" "BC:83:85" "EC:83:50" "B8:31:B5" "9C:6C:15" "48:86:E8" "2C:29:97" "10:2F:6B" "28:18:78" "60:45:BD" "7C:ED:8D" "00:0D:3A" "B4:E1:C4")


_system="$(uname -s)"

if [ $_system == "Darwin" ]; then

_off
sudo ifconfig en0 ether $(hexchars="0123456789ABCDEF"
end=$( for i in {1..6} ; do echo -n ${hexchars:$(( $RANDOM % 16 )):1} ; done | sed -e 's/\(..\)/-\1/g' )
echo ${_codes[$_rnd]}$end)
_on

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Microsoft :: $(ifconfig en0 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Linux" ]]; then

sudo ip link set dev enp0s3 down
sudo ip link set dev enp0s3 address $(echo ${_codes[$_rnd]}:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
sudo ip link set dev enp0s3 up

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Microsoft :: $(ifconfig enp0s3 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Minix" ]]; then

  sudo ip link set dev enp0s3 down
  sudo ip link set dev enp0s3 address $(echo echo 48:50:73:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
  sudo ip link set dev enp0s3 up

elif [[ $_system == "OpenBSD" ]]; then

  ifconfig em0 lladdr $(echo echo ${_codes[$_rnd]}:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])

else

 printf "Not available on this system\n"

fi

}

_lenovo(){


_rnd=$[RANDOM%5]
_codes=("98:FF:D0" "50:3C:C4" "74:04:2B" "E0:2C:B2" "70:72:0D" "D4:22:3F")

_system="$(uname -s)"

if [ $_system == "Darwin" ]; then

_off
sudo ifconfig en0 ether $(hexchars="0123456789ABCDEF"
end=$( for i in {1..6} ; do echo -n ${hexchars:$(( $RANDOM % 16 )):1} ; done | sed -e 's/\(..\)/-\1/g' )
echo ${_codes[$_rnd]}$end)
_on

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Lenovo :: $(ifconfig en0 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Linux" ]]; then

sudo ip link set dev enp0s3 down
sudo ip link set dev enp0s3 address $(echo ${_codes[$_rnd]}:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
sudo ip link set dev enp0s3 up

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Lenovo :: $(ifconfig enp0s3 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Minix" ]]; then

  sudo ip link set dev enp0s3 down
  sudo ip link set dev enp0s3 address $(echo echo 70:72:0D:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
  sudo ip link set dev enp0s3 up

elif [[ $_system == "OpenBSD" ]]; then

  ifconfig em0 lladdr $(echo echo ${_codes[$_rnd]}:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])

else

 printf "Not available on this system\n"

fi

}


_intel(){


  _rnd=$[RANDOM%6]
  _codes=("00:03:47" "00:11:75" "00:13:E8" "00:13:02" "E4:F8:9C" "A4:02:B9" "4C:34:88")

_system="$(uname -s)"

if [ $_system == "Darwin" ]; then

_off
sudo ifconfig en0 ether $(hexchars="0123456789ABCDEF"
end=$( for i in {1..6} ; do echo -n ${hexchars:$(( $RANDOM % 16 )):1} ; done | sed -e 's/\(..\)/-\1/g' )
echo ${_codes[$_rnd]}$end)
_on

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Intel :: $(ifconfig en0 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Linux" ]]; then

sudo ip link set dev enp0s3 down
sudo ip link set dev enp0s3 address $(echo ${_codes[$_rnd]}:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
sudo ip link set dev enp0s3 up

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Intel :: $(ifconfig enp0s3 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Minix" ]]; then

  sudo ip link set dev enp0s3 down
  sudo ip link set dev enp0s3 address $(echo echo 2C:6E:85:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
  sudo ip link set dev enp0s3 up

elif [[ $_system == "OpenBSD" ]]; then

  ifconfig em0 lladdr $(echo echo ${_codes[$_rnd]}:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])

else

 printf "Not available on this system\n"

fi

}


_amd(){




_system="$(uname -s)"

if [ $_system == "Darwin" ]; then

_off
sudo ifconfig en0 ether $(hexchars="0123456789ABCDEF"
end=$( for i in {1..6} ; do echo -n ${hexchars:$(( $RANDOM % 16 )):1} ; done | sed -e 's/\(..\)/-\1/g' )
echo 00:0C:87$end)
_on

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE AMD :: $(ifconfig en0 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Linux" ]]; then

sudo ip link set dev enp0s3 down
sudo ip link set dev enp0s3 address $(echo 00:0C:87:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
sudo ip link set dev enp0s3 up

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE AMD :: $(ifconfig enp0s3 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Minix" ]]; then

  sudo ip link set dev enp0s3 down
  sudo ip link set dev enp0s3 address $(echo echo 00:0C:87:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
  sudo ip link set dev enp0s3 up

elif [[ $_system == "OpenBSD" ]]; then

  ifconfig em0 lladdr $(echo echo 00:0C:87:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])

else

 printf "Not available on this system\n"

fi

}

_nvidia(){



_system="$(uname -s)"

if [ $_system == "Darwin" ]; then

_off
sudo ifconfig en0 ether $(hexchars="0123456789ABCDEF"
end=$( for i in {1..6} ; do echo -n ${hexchars:$(( $RANDOM % 16 )):1} ; done | sed -e 's/\(..\)/-\1/g' )
echo 00:04:4B$end)
_on

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Nvidia :: $(ifconfig en0 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Linux" ]]; then

sudo ip link set dev enp0s3 down
sudo ip link set dev enp0s3 address $(echo 00:04:4B:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
sudo ip link set dev enp0s3 up

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Nvidia :: $(ifconfig enp0s3 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Minix" ]]; then

  sudo ip link set dev enp0s3 down
  sudo ip link set dev enp0s3 address $(echo echo 00:04:4B:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
  sudo ip link set dev enp0s3 up

elif [[ $_system == "OpenBSD" ]]; then

  ifconfig em0 lladdr $(echo echo 00:04:4B:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])

else

 printf "Not available on this system\n"

fi

}

_tesla(){



_system="$(uname -s)"

if [ $_system == "Darwin" ]; then

_off
sudo ifconfig en0 ether $(hexchars="0123456789ABCDEF"
end=$( for i in {1..6} ; do echo -n ${hexchars:$(( $RANDOM % 16 )):1} ; done | sed -e 's/\(..\)/-\1/g' )
echo 98:ED:5C$end)
_on

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Tesla :: $(ifconfig en0 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Linux" ]]; then

sudo ip link set dev enp0s3 down
sudo ip link set dev enp0s3 address $(echo 98:ED:5C:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
sudo ip link set dev enp0s3 up

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Tesla :: $(ifconfig enp0s3 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Minix" ]]; then

  sudo ip link set dev enp0s3 down
  sudo ip link set dev enp0s3 address $(echo echo 98:ED:5C:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
  sudo ip link set dev enp0s3 up

elif [[ $_system == "OpenBSD" ]]; then

  ifconfig em0 lladdr $(echo echo 98:ED:5C:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])

else

 printf "Not available on this system\n"

fi

}

_bombardier(){


_system="$(uname -s)"

if [ $_system == "Darwin" ]; then

_off
sudo ifconfig en0 ether $(hexchars="0123456789ABCDEF"
end=$( for i in {1..6} ; do echo -n ${hexchars:$(( $RANDOM % 16 )):1} ; done | sed -e 's/\(..\)/-\1/g' )
echo 00:11:BD$end)
_on

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Microsoft :: $(ifconfig en0 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Linux" ]]; then

sudo ip link set dev enp0s3 down
sudo ip link set dev enp0s3 address $(echo 00:11:BD:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
sudo ip link set dev enp0s3 up

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Microsoft :: $(ifconfig enp0s3 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Minix" ]]; then

  sudo ip link set dev enp0s3 down
  sudo ip link set dev enp0s3 address $(echo echo 00:11:BD:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
  sudo ip link set dev enp0s3 up

elif [[ $_system == "OpenBSD" ]]; then

  ifconfig em0 lladdr $(echo echo 00:11:BD:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])

else

 printf "Not available on this system\n"

fi

}


_boeing(){


  _rnd=$[RANDOM%3]
  _codes=("00:50:93" "00:06:F8" "34:61:78" "00:40:BE")

_off
sudo ifconfig en0 ether $(hexchars="0123456789ABCDEF"
end=$( for i in {1..6} ; do echo -n ${hexchars:$(( $RANDOM % 16 )):1} ; done | sed -e 's/\(..\)/-\1/g' )
echo $end)
_on
if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE  :: $(ifconfig en0 | grep ether | awk '{print $2}')$NC\n"
fi

_system="$(uname -s)"

if [ $_system == "Darwin" ]; then

_off
sudo ifconfig en0 ether $(hexchars="0123456789ABCDEF"
end=$( for i in {1..6} ; do echo -n ${hexchars:$(( $RANDOM % 16 )):1} ; done | sed -e 's/\(..\)/-\1/g' )
echo ${_codes[$_rnd]}$end)
_on

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Boeing :: $(ifconfig en0 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Linux" ]]; then

sudo ip link set dev enp0s3 down
sudo ip link set dev enp0s3 address $(echo ${_codes[$_rnd]}:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
sudo ip link set dev enp0s3 up

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Boeing :: $(ifconfig enp0s3 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Minix" ]]; then

  sudo ip link set dev enp0s3 down
  sudo ip link set dev enp0s3 address $(echo echo 00:50:93:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
  sudo ip link set dev enp0s3 up

elif [[ $_system == "OpenBSD" ]]; then

  ifconfig em0 lladdr $(echo echo ${_codes[$_rnd]}:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])

else

 printf "Not available on this system\n"

fi

}


_lockheed(){



_system="$(uname -s)"

if [ $_system == "Darwin" ]; then

_off
sudo ifconfig en0 ether $(hexchars="0123456789ABCDEF"
end=$( for i in {1..6} ; do echo -n ${hexchars:$(( $RANDOM % 16 )):1} ; done | sed -e 's/\(..\)/-\1/g' )
echo 00:07:EF$end)
_on

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Lockheed :: $(ifconfig en0 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Linux" ]]; then

sudo ip link set dev enp0s3 down
sudo ip link set dev enp0s3 address $(echo 00:07:EF:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
sudo ip link set dev enp0s3 up

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Lockheed :: $(ifconfig enp0s3 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Minix" ]]; then

  sudo ip link set dev enp0s3 down
  sudo ip link set dev enp0s3 address $(echo echo 00:07:EF:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
  sudo ip link set dev enp0s3 up

elif [[ $_system == "OpenBSD" ]]; then

  ifconfig em0 lladdr $(echo echo 00:07:EF:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])

else

 printf "Not available on this system\n"

fi

}

_airbus(){



_system="$(uname -s)"

if [ $_system == "Darwin" ]; then

_off
sudo ifconfig en0 ether $(hexchars="0123456789ABCDEF"
end=$( for i in {1..6} ; do echo -n ${hexchars:$(( $RANDOM % 16 )):1} ; done | sed -e 's/\(..\)/-\1/g' )
echo 00:23:B9$end)
_on

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Airbus :: $(ifconfig en0 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Linux" ]]; then

sudo ip link set dev enp0s3 down
sudo ip link set dev enp0s3 address $(echo 00:23:B9:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
sudo ip link set dev enp0s3 up

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Airbus :: $(ifconfig enp0s3 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Minix" ]]; then

  sudo ip link set dev enp0s3 down
  sudo ip link set dev enp0s3 address $(echo echo 00:23:B9:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
  sudo ip link set dev enp0s3 up

elif [[ $_system == "OpenBSD" ]]; then

  ifconfig em0 lladdr $(echo echo 00:23:B9:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])

else

 printf "Not available on this system\n"

fi

}

_northrop(){



_system="$(uname -s)"

if [ $_system == "Darwin" ]; then

_off
sudo ifconfig en0 ether $(hexchars="0123456789ABCDEF"
end=$( for i in {1..6} ; do echo -n ${hexchars:$(( $RANDOM % 16 )):1} ; done | sed -e 's/\(..\)/-\1/g' )
echo 00:19:8A$end)
_on

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Northrop :: $(ifconfig en0 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Linux" ]]; then

sudo ip link set dev enp0s3 down
sudo ip link set dev enp0s3 address $(echo 00:19:8A:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
sudo ip link set dev enp0s3 up

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Northrop :: $(ifconfig enp0s3 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Minix" ]]; then

  sudo ip link set dev enp0s3 down
  sudo ip link set dev enp0s3 address $(echo echo 00:19:8A:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
  sudo ip link set dev enp0s3 up

elif [[ $_system == "OpenBSD" ]]; then

  ifconfig em0 lladdr $(echo echo 00:19:8A:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])

else

 printf "Not available on this system\n"

fi

}

_bae(){



_system="$(uname -s)"

if [ $_system == "Darwin" ]; then

_off
sudo ifconfig en0 ether $(hexchars="0123456789ABCDEF"
end=$( for i in {1..6} ; do echo -n ${hexchars:$(( $RANDOM % 16 )):1} ; done | sed -e 's/\(..\)/-\1/g' )
echo CC:3F:EA$end)
_on

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE BAE :: $(ifconfig en0 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Linux" ]]; then

sudo ip link set dev enp0s3 down
sudo ip link set dev enp0s3 address $(echo CC:3F:EA:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
sudo ip link set dev enp0s3 up

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE BAE :: $(ifconfig enp0s3 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Minix" ]]; then

  sudo ip link set dev enp0s3 down
  sudo ip link set dev enp0s3 address $(echo echo CC:3F:EA:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
  sudo ip link set dev enp0s3 up

elif [[ $_system == "OpenBSD" ]]; then

  ifconfig em0 lladdr $(echo echo CC:3F:EA:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])

else

 printf "Not available on this system\n"

fi

}


_us_army(){


_system="$(uname -s)"

if [ $_system == "Darwin" ]; then

_off
sudo ifconfig en0 ether $(hexchars="0123456789ABCDEF"
end=$( for i in {1..6} ; do echo -n ${hexchars:$(( $RANDOM % 16 )):1} ; done | sed -e 's/\(..\)/-\1/g' )
echo 00:C0:ED$end)
_on

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE US Army  :: $(ifconfig en0 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Linux" ]]; then

sudo ip link set dev enp0s3 down
sudo ip link set dev enp0s3 address $(echo 00:C0:ED:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
sudo ip link set dev enp0s3 up

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE US Army :: $(ifconfig enp0s3 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Minix" ]]; then

  sudo ip link set dev enp0s3 down
  sudo ip link set dev enp0s3 address $(echo echo 00:C0:ED:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
  sudo ip link set dev enp0s3 up

elif [[ $_system == "OpenBSD" ]]; then

  ifconfig em0 lladdr $(echo echo 00:C0:ED:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])

else

 printf "Not available on this system\n"

fi

}


_toyota(){



_system="$(uname -s)"

if [ $_system == "Darwin" ]; then

_off
sudo ifconfig en0 ether $(hexchars="0123456789ABCDEF"
end=$( for i in {1..6} ; do echo -n ${hexchars:$(( $RANDOM % 16 )):1} ; done | sed -e 's/\(..\)/-\1/g' )
echo 00:0A:AB$end)
_on

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Toyota :: $(ifconfig en0 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Linux" ]]; then

sudo ip link set dev enp0s3 down
sudo ip link set dev enp0s3 address $(echo 00:0A:AB:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
sudo ip link set dev enp0s3 up

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Toyota :: $(ifconfig enp0s3 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Minix" ]]; then

  sudo ip link set dev enp0s3 down
  sudo ip link set dev enp0s3 address $(echo echo 00:0A:AB:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
  sudo ip link set dev enp0s3 up

elif [[ $_system == "OpenBSD" ]]; then

  ifconfig em0 lladdr $(echo echo 00:0A:AB:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])

else

 printf "Not available on this system\n"

fi

}


_porsche(){



_system="$(uname -s)"

if [ $_system == "Darwin" ]; then

_off
sudo ifconfig en0 ether $(hexchars="0123456789ABCDEF"
end=$( for i in {1..6} ; do echo -n ${hexchars:$(( $RANDOM % 16 )):1} ; done | sed -e 's/\(..\)/-\1/g' )
echo D0:0E:A4$end)
_on

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Porsche :: $(ifconfig en0 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Linux" ]]; then

sudo ip link set dev enp0s3 down
sudo ip link set dev enp0s3 address $(echo D0:0E:A4:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
sudo ip link set dev enp0s3 up

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Porsche :: $(ifconfig enp0s3 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Minix" ]]; then

  sudo ip link set dev enp0s3 down
  sudo ip link set dev enp0s3 address $(echo echo D0:0E:A4:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
  sudo ip link set dev enp0s3 up

elif [[ $_system == "OpenBSD" ]]; then

  ifconfig em0 lladdr $(echo echo D0:0E:A4:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])

else

 printf "Not available on this system\n"

fi

}

_parrot(){


  _rnd=$[RANDOM%4]
  _codes=("90:3A:E6" "90:03:B7" "A0:14:3D" "00:26:7E" "00:12:1C")

_system="$(uname -s)"

if [ $_system == "Darwin" ]; then

_off
sudo ifconfig en0 ether $(hexchars="0123456789ABCDEF"
end=$( for i in {1..6} ; do echo -n ${hexchars:$(( $RANDOM % 16 )):1} ; done | sed -e 's/\(..\)/-\1/g' )
echo ${_codes[$_rnd]}$end)
_on

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Parrot :: $(ifconfig en0 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Linux" ]]; then

sudo ip link set dev enp0s3 down
sudo ip link set dev enp0s3 address $(echo ${_codes[$_rnd]}:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
sudo ip link set dev enp0s3 up

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE Parrot :: $(ifconfig enp0s3 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Minix" ]]; then

  sudo ip link set dev enp0s3 down
  sudo ip link set dev enp0s3 address $(echo echo A0:14:3D:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
  sudo ip link set dev enp0s3 up

elif [[ $_system == "OpenBSD" ]]; then

  ifconfig em0 lladdr $(echo echo ${_codes[$_rnd]}:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])

else

 printf "Not available on this system\n"

fi

}

_nasa(){



_system="$(uname -s)"

if [ $_system == "Darwin" ]; then

_off
sudo ifconfig en0 ether $(hexchars="0123456789ABCDEF"
end=$( for i in {1..6} ; do echo -n ${hexchars:$(( $RANDOM % 16 )):1} ; done | sed -e 's/\(..\)/-\1/g' )
echo 00:08:55$end)
_on

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE NASA :: $(ifconfig en0 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Linux" ]]; then

sudo ip link set dev enp0s3 down
sudo ip link set dev enp0s3 address $(echo 00:08:55:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
sudo ip link set dev enp0s3 up

if [ "$1" == "-q" ]; then
>/dev/null  2>&1
else
printf "$WHITE NASA :: $(ifconfig enp0s3 | grep ether | awk '{print $2}')$NC\n"
fi

elif [[ $_system == "Minix" ]]; then

  sudo ip link set dev enp0s3 down
  sudo ip link set dev enp0s3 address $(echo echo 00:08:55:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])
  sudo ip link set dev enp0s3 up

elif [[ $_system == "OpenBSD" ]]; then

  ifconfig em0 lladdr $(echo echo 00:08:55:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10]:$[RANDOM%10]$[RANDOM%10])

else

 printf "Not available on this system\n"

fi

}

_tv(){

  _off
  sudo ifconfig en0 ether 80:56:F2:78:98:DD
  _on
  if [ "$1" == "-q" ]; then
  >/dev/null  2>&1
  else
  printf "$WHITE Sony Bravia :: $(ifconfig en0 | grep ether | awk '{print $2}')$NC\n"
  fi


}



# FUNCTIONS

_vers(){

  printf "\n"
  printf "        $_name    \n"
  printf "             $_version                 \n"
  printf "\n"

}



_help(){


  printf "\n"
  printf "$_name\n"
  printf "\n"
  printf "Usage:  salazaar [-vhupodw] [--summon <daemon> ]\n"
  printf "\n"
  printf "Options: -v - Show version info\n"
  printf "         -h - Show help menu\n"
  printf "         -p - power mode\n"
  printf "         -d - destroy mode\n"
  printf "         -w - wizard mode\n"
  printf "         --morph - Network morphing\n"
  printf "\n"
  printf "Examples: salazaar -p\n"
  printf "          salazaar -o --morph Apple\n"
  printf "          salazaar --opaa\n"
  printf "\n"


}

_install(){

  sudo chmod +x salazaar
  sudo cp salazaar /usr/local/bin/
  printf "$GREEN __installed!$NC \n"


}

_qinstall(){

  sudo chmod +x salazaar
  sudo cp salazaar /usr/local/bin/


}

_uninstall(){

  sudo cd /usr/local/bin/
  sudo chmod -x salazaar
  sudo rm -rf salazaar


}



_blood(){

   _red ; clear ; netstat -ap tcp ; _quietTextRestore

}

_light(){

   _yellow ; clear ; netstat -ap udp ; _quietTextRestore

}

_status(){



  clear
  printf "$RED $_name $WHITE $_version $NC $BLUE $_status\n"
  printf "`echo External IP  ` >> $YELLOW`dig +short myip.opendns.com @resolver1.opendns.com`$NC"
  printf "\n`echo Local IP  ` >> $YELLOW`ifconfig en0 | grep inet | sed '1d' | awk '{print $2;}'`$NC"
  printf "\n`echo MAC-Address  ` >> $YELLOW`ifconfig en0 | grep ether | awk '{print $2;}'`$NC"
  printf "\n`echo Router IP  ` >> $BLUE`ipconfig getpacket en0 | grep router | awk '{print $3;}' | cut -c 2-12`$NC"
  printf "\n$GREEN Location >> $WHITE" ; curl "ipinfo.io/city"
  printf "$GREEN Coordinates >> $WHITE" ; curl "ipinfo.io/loc"
  printf "$GREEN Internet Provided by >> $WHITE" ; curl "ipinfo.io/org"
  printf "$GREEN`echo Machine named  ` $YELLOW`uname -n`$NC"
  printf "\n`echo You are connected on channel `$BLUE `airport -c | awk '{print $2;}'` $NC`echo on router ` $BLUE`airport -I | awk '/ SSID/ {print substr($0, index($0, $2))}'`$NC\n"
  printf "`echo "There are "`$BLUE`arp -a | grep ? -c` $NC`echo "devices connected here"`\n"
  printf "$BLUE"
  arp -a | sed -n '1p'
  printf "$YELLOW"
  arp -a | grep $(ifconfig en0 | grep inet | sed '1d' | awk '{print $2;}')
  printf "$NC"
  arp -a | sed '1d'
  echo
  printf "$WHITE\n"
  date
  printf "$NC\n"

}

_shed(){

   clear

}



_look(){

   curl ipinfo.io/$(nslookup $1 | sed -n '6p' | awk '{print $2;}')

}

_where(){

   curl ipinfo.io/city/$(nslookup $1 | sed -n '6p' | awk '{print $2;}')

}


_what(){

   printf "This is $(uname -s)\n"



}


_melt(){

  _rnd=$[RANDOM%50]
  _names=("istanbul" "franfurt" "atlantic" "lockheed" "stutgart" "aushwitz" "mercedes" "oklahoma" "calimero" "building" "american" "business" "football" "virginia" "darkness" "victoria" "champion" "solution" "computer" "dopamine" "eternity" "baseball" "paradise" "scotland" "republic" "hydrogen" "pressure" "congress" "nitrogen" "genocide" "creature" "wildlife" "triangle" "anderson" "airplane" "magician" "reaction" "quadrant" "penelope" "security" "military" "guardian" "festival" "invasion" "augustus" "superman" "mushroom" "syndrome" "goldfish" "anaconda")

  _converted=$( echo ${_names[$_rnd]} | sed 's/./&./g' | awk '{print toupper($0)}' | sed 's/.$//')
  _revved=$( echo ${_names[$_rnd]} | rev)

 sudo cp /usr/local/bin/salazaar ./salazaar
 sudo cp salazaar salazaar2
 sh salazaar -uninstall
 sudo rm -rf salazaar
 cat salazaar2 | sed "s/salazaar/${_names[$_rnd]}/g" | sed "s/S.A.L.A.Z.A.A.R/$_converted/g" > ${_names[$_rnd]}
 sudo rm -rf ryan2 ; printf "$_revved\n" ; sh ${_names[$_rnd]} -qinstall ; sudo rm -rf ${_names[$_rnd]}

}


_morph(){

  if [ "$1" == "samsung" ]; then
    _samsung  $2

  elif [[ "$1" == "lg" ]]; then
    _lg  $2

  elif [[ "$1" == "apple" ]]; then
    _apple $2

  elif [[ "$1" == "huawei" ]]; then
    _huawei $2

  elif [[ "$1" == "xperia" ]]; then
    _xperia $2

  elif [[ "$1" == "oppo" ]]; then
    _oppo $2

  elif [[ "$1" == "yota" ]]; then
    _yota $2

  elif [[ "$1" == "lumia" ]]; then
    _lumia $2

  elif [[ "$1" == "nokia" ]]; then
    _nokia $2

  elif [[ "$1" == "htc" ]]; then
    _htc $2

  elif [[ "$1" == "hp" ]]; then
    _hp $2

  elif [[ "$1" == "dell" ]]; then
    _dell $2

  elif [[ "$1" == "ibm" ]]; then
    _ibm $2

  elif [[ "$1" == "microsoft" ]]; then
    _microsoft $2

  elif [[ "$1" == "lenovo" ]]; then
    _lenovo $2

  elif [[ "$1" == "intel" ]]; then
    _intel $2

  elif [[ "$1" == "amd" ]]; then
    _amd $2

  elif [[ "$1" == "nvidia" ]]; then
    _nvidia $2

  elif [[ "$1" == "one_plus" ]]; then
    _one_plus $2

  elif [[ "$1" == "airbus" ]]; then
    _airbus $2

  elif [[ "$1" == "boeing" ]]; then
    _boeing $2

  elif [[ "$1" == "lockheed" ]]; then
    _lockheed $2

  elif [[ "$1" == "northrop" ]]; then
    _northrop $2

  elif [[ "$1" == "bae" ]]; then
    _bae $2

  elif [[ "$1" == "bombardier" ]]; then
    _bombardier $2

  elif [[ "$1" == "tesla" ]]; then
    _tesla $2

  elif [[ "$1" == "toyota" ]]; then
    _toyota $2

  elif [[ "$1" == "porsche" ]]; then
    _porsche $2

  elif [[ "$1" == "us_army" ]]; then
    _us_army $2

  elif [[ "$1" == "parrot" ]]; then
    _parrot $2

  elif [[ "$1" == "nasa" ]]; then
    _nasa $2

  elif [[ "$1" == "tv" ]]; then
    _tv $2

  elif [[ "$1" == "magic" ]]; then
    _magic_morph
  else
    printf "$RED Morphing failed$NC\n"
  fi



}


_options(){

   printf "-blood\n"
   printf "-look\n"
   printf "-dissect\n"
   printf "-status or -power or -show\n"
   printf "-out or -off or HIDE in poola mea\n"
   printf "-poof or -gone\n"
   printf "-shed or -done\n"
   printf "-what\n"
   printf "=-where\n"


}


_back(){

   killall -9 CyberGhost\ VPN
   #_vpn-off

}

: '
_vpn-on() {
  /usr/bin/env osascript <<-EOF
tell application "System Events"
       tell current location of network preferences
               set VPN to service "CyberGhost VPN (IKEV2)"
               if exists VPN then connect VPN
               repeat while (current configuration of VPN is not connected)
                   delay 1
               end repeat
       end tell
end tell
EOF
}

_vpn-off() {
   scutil --nc stop VPN
}

'
_up(){

   open -a /Applications/CyberGhost\ VPN.app/Contents/MacOS/CyberGhost\ VPN
   #_vpn-on

}

appPID(){
   ps -A | grep -m1 "$1" | awk '{print $1}'
}

off(){

   sudo airport -z

}


on(){

   networksetup -setairportpower en0 off
   networksetup -setairportpower en0 on

}

_hide(){

  off
  sudo ifconfig en0 ether $(hexchars="0123456789ABCDEF"
  end=$( for i in {1..6} ; do echo -n ${hexchars:$(( $RANDOM % 16 )):1} ; done | sed -e 's/\(..\)/-\1/g' )
  echo 00-60-2F$end)
  printf "You can't see me $(ifconfig en0 | grep ether | awk '{print $2}')\n"

}

_piece(){

  off
  sudo ifconfig en0 ether $(arp -a | awk '{print $4}' | sed '1d')
  printf "$WHITE Integration done: $(ifconfig en0 | grep ether | awk '{print $2}')$NC\n"

}


_mb(){

  off
  sudo ifconfig en0 ether $(arp -a | grep $(ipconfig getpacket en0 | grep router | awk '{print $3;}' | cut -c 2-12) | awk '{print $4}')
  printf "$WHITE Hello, Motherboard: $(ifconfig en0 | grep ether | awk '{print $2}')$NC\n"

}


if [ "$1" == "-v" ]; then
  _vers
elif [[ "$1" == "-h" ]]; then
  _help
elif [[ "$1" == "-blood" ]]; then
  _blood
elif [[ "$1" == "-light" ]]; then
  _light
elif [[ "$1" == "-status" ]]; then
  _status
elif [[ "$1" == "-power" ]]; then
  _status
elif [[ "$1" == "-look" ]]; then
   _look $2
 elif [[ "$1" == "-shed" ]]; then
   _shed
 elif [[ "$1" == "--morph" ]]; then

    _morph $2 $3

 elif [[ "$1" == "-morph" ]]; then

    _morph $2 $3

 elif [[ "$1" == "-done" ]]; then
   _shed
 elif [[ "$1" == "-come" ]]; then
   _shed
 elif [[ "$1" == "-back" ]]; then
   _back
 elif [[ "$1" == "-down" ]]; then
   _back
 elif [[ "$1" == "-hide" ]]; then
   _hide
 elif [[ "$1" == "-piece" ]]; then
   _piece
 elif [[ "$1" == "-mb" ]]; then
   _mb
 elif [[ "$1" == "-off" ]]; then
   off
 elif [[ "$1" == "-out" ]]; then
   off
 elif [[ "$1" == "-up" ]]; then
   _up
 elif [[ "$1" == "-where" ]]; then
   _where "$(dig +short myip.opendns.com @resolver1.opendns.com)"
 elif [[ "$1" == "-what" ]]; then
   _what
 elif [[ "$1" == "--melt" ]]; then
   _melt
 elif [[ "$1" == "-melt" ]]; then
   _melt
elif [[ "$1" == "-install" ]]; then
  _install
elif [[ "$1" == "--install" ]]; then
  _install
elif [[ "$1" == "-qinstall" ]]; then
  _qinstall
elif [[ "$1" == "--qinstall" ]]; then
  _qinstall
elif [[ "$1" == "-uninstall" ]]; then
  _uninstall
elif [[ "$1" == "--uninstall" ]]; then
  _uninstall
fi
